parameters:
  - name: podId
    default: ''
  - name: personaId
    default: ''
  - name: keyVaultName
  - name: podResourceGroup
  - name: targetContainer

stages:
  - stage: Swap_Users_${{ parameters.podId }}
    displayName: Swap Users ${{ parameters.podId }}
    dependsOn:
      - DeployPod_${{ parameters.podId }}
      - Deploy_Host_VMs_${{ parameters.podId }}
    variables:
      - template: vars.yml
      - name: keyVaultName
        value: ${{ parameters.keyVaultName }}
      - name: podResourceGroup
        value: ${{ parameters.podResourceGroup }}
      - name: prodUserGroup
        value: ROL-WVD-${{parameters.personaId}}-${{parameters.podId}}-USERS
      - name: testUserGroup
        value: ROL-WVD-${{parameters.personaId}}-${{parameters.podId}}-TEST-USERS

      - ${{ if eq( parameters.targetContainer, 'blue') }}:
        - name: oldContainer
          value: green
        - name: newProdAppGroup
          value: $[stageDependencies.DeployPod_${{ parameters.podId }}.Deploy_ARM_Template.outputs['Output.blue-appGroupName']]
        - name: oldProdAppGroup
          value: $[stageDependencies.DeployPod_${{ parameters.podId }}.Deploy_ARM_Template.outputs['Output.green-appGroupName']]

      - ${{ if eq( parameters.targetContainer, 'green') }}:
        - name: oldContainer
          value: blue
        - name: newProdAppGroup
          value: $[stageDependencies.DeployPod_${{ parameters.podId }}.Deploy_ARM_Template.outputs['Output.green-appGroupName']]
        - name: oldProdAppGroup
          value: $[stageDependencies.DeployPod_${{ parameters.podId }}.Deploy_ARM_Template.outputs['Output.blue-appGroupName']]
    jobs:
      - deployment: Swap_App_Group_Users
        displayName: Swap App Group Users
        environment: ${{ format('WVD-{0}-{1}', parameters.personaId, parameters.podId)}}
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                  displayName: Clone Git Repo
                - task: AzurePowerShell@4
                  displayName: Add Prod Users to ${{ parameters.targetContainer }}
                  inputs:
                    pwsh: true
                    azureSubscription: ${{ variables.azureConnectionName }}
                    scriptType: filePath
                    azurePowerShellVersion: "LatestVersion"
                    scriptPath: $(Build.Repository.LocalPath)\misc\Add-AppGroupAssignment.ps1
                    scriptArguments: -ResourceGroupName ${{ parameters.podResourceGroup }} -WvdAppGroupName $(newProdAppGroup) -AzureADGroupName $(prodUserGroup)

                - task: AzurePowerShell@4
                  displayName: Remove Prod Users from ${{ variables.oldContainer }}
                  inputs:
                    pwsh: true
                    azureSubscription: ${{ variables.azureConnectionName }}
                    scriptType: filePath
                    azurePowerShellVersion: "LatestVersion"
                    scriptPath: $(Build.Repository.LocalPath)\misc\Remove-AppGroupAssignment.ps1
                    scriptArguments: -ResourceGroupName ${{ parameters.podResourceGroup }} -WvdAppGroupName $(oldProdAppGroup) -AzureADGroupName $(prodUserGroup)

                - task: AzurePowerShell@4
                  displayName: Remove Test Users from ${{ parameters.targetContainer }}
                  inputs:
                    pwsh: true
                    azureSubscription: ${{ variables.azureConnectionName }}
                    scriptType: filePath
                    azurePowerShellVersion: "LatestVersion"
                    scriptPath: $(Build.Repository.LocalPath)\misc\Remove-AppGroupAssignment.ps1
                    scriptArguments: -ResourceGroupName ${{ parameters.podResourceGroup }} -WvdAppGroupName $(newProdAppGroup) -AzureADGroupName $(testUserGroup)
