parameters:
  - name: podId
    default: ''
  - name: personaId
  - name: numberOfVMs
    type: number
  - name: keyVaultName
  - name: podResourceGroup
  - name: containerResourceGroup
  - name: targetRegion
  - name: targetContainer

stages:
  - stage: Deploy_Host_VMs_${{ parameters.podId }}
    dependsOn: DeployPod_${{ parameters.podId }}
    displayName: Deploy VMs ${{ parameters.podId}}
    variables:
      testUserGroup: ROL-WVD-${{parameters.personaId}}-${{parameters.podId}}-TEST-USERS

      ${{ if eq( parameters.targetContainer, 'blue') }}:
        hostPoolName: $[stageDependencies.DeployPod_${{ parameters.podId }}.Deploy_ARM_Template.outputs['Output.blue-hostPoolName']]
        appGroupName: $[stageDependencies.DeployPod_${{ parameters.podId }}.Deploy_ARM_Template.outputs['Output.blue-appGroupName']]
        subnetId: blue-subnet-id

      ${{ if eq( parameters.targetContainer, 'green') }}:
        hostPoolName: $[stageDependencies.DeployPod_${{ parameters.podId }}.Deploy_ARM_Template.outputs['Output.green-hostPoolName']]
        appGroupName: $[stageDependencies.DeployPod_${{ parameters.podId }}.Deploy_ARM_Template.outputs['Output.green-appGroupName']]
        subnetId: green-subnet-id
    jobs:
      - template: deploy-template.yml
        parameters:
          resourceGroupName: ${{ parameters.containerResourceGroup }}
          location: ${{ parameters.targetRegion }}
          templateFile: arm-templates/main-template-kv2a.json
          parameterArray:
            - VaultName ${{ parameters.keyVaultName }}
            - VaultResourceGroupName ${{ parameters.podResourceGroup }}
            - VaultSubscriptionId $(subscriptionId)
            - useSharedImage $(useSharedImage)
            - subnetId $(subnetId)
            - desId $(diskEncryptKeyResourceId)
            - personaID ${{ parameters.personaId }}
            - podID ${{ parameters.podId }}
            - host-pool-resource-group ${{ parameters.podResourceGroup }}
            - HostPoolName $(hostPoolName)
            - workspaceId $(workspaceId)
            - joinDomain $(joinDomain)
            - instance-count ${{ parameters.numberOfVMs }}
            - shared-image-gallery-rg $(sigRG)
            - shared-image-gallery-name $(sigName)
            
            # - shared-image-gallery-definition ${{ parameters.personaId }}

          postDeploySteps:
            - task: AzurePowerShell@4
              name: AddTestUsers
              displayName: Add Test Users
              inputs:
                scriptType: FilePath
                azurePowerShellVersion: LatestVersion
                azureSubscription: $(azureConnectionName)
                scriptPath: $(Build.Repository.LocalPath)\misc\Add-AppGroupAssignment.ps1
                scriptArguments: -ResourceGroupName ${{ parameters.podResourceGroup }} -WvdAppGroupName $(appGroupName) -AzureADGroupName $(testUserGroup)